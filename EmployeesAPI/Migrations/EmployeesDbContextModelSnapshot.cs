// <auto-generated />
using System;
using EmployeesAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmployeesAPI.Migrations
{
    [DbContext(typeof(EmployeesDbContext))]
    partial class EmployeesDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EmployeesAPI.Models.Domain.Department", b =>
                {
                    b.Property<Guid>("departmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("departmentDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("departmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("departmentID");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("EmployeesAPI.Models.Domain.Employee", b =>
                {
                    b.Property<Guid>("employeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DepartmentdepartmentID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProjectprojectID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("employeeDOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("employeeEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("employeeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("employeePhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("employeeID");

                    b.HasIndex("DepartmentdepartmentID");

                    b.HasIndex("ProjectprojectID");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("EmployeesAPI.Models.Domain.Project", b =>
                {
                    b.Property<Guid>("projectID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("mainTechnologyUsed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("projectDeadline")
                        .HasColumnType("datetime2");

                    b.Property<string>("projectDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("projectImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("projectName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("projectID");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("EmployeesAPI.Models.Domain.Employee", b =>
                {
                    b.HasOne("EmployeesAPI.Models.Domain.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentdepartmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmployeesAPI.Models.Domain.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectprojectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Project");
                });
#pragma warning restore 612, 618
        }
    }
}
